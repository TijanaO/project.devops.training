version: v1.0
name: Initial Pipeline
agent:
  machine:
    type: f1-standard-2
    os_image: ubuntu2204
blocks:
  - name: Build and Cache Dependencies
    task:
      jobs:
        - name: 'Job #1'
          commands:
            - checkout
            - sem-version python 3.11
            - cache restore
            - pip install -r requirements.txt
            - cache store "pip-cache-$(checksum requirements.txt)" ~/.cache/pip
      secrets:
        - name: dockerhub-credentials
  - name: Lint
    task:
      jobs:
        - name: 'Job #1'
          commands:
            - checkout
            - sem-version python 3.11
            - cache restore "pip-cache-$(checksum requirements.txt)"
            - pip install -r requirements.txt
            - pip install pylint
            - pylint src
      secrets:
        - name: dockerhub-credentials
  - name: 'Dependency Security Scan '
    task:
      jobs:
        - name: 'Job #1'
          commands:
            - checkout
            - sem-version python 3.11
            - cache restore "pip-cache-$(checksum requirements.txt)"
            - pip install -r requirements.txt
            - pip install safety
            - safety check -r requirements.txt
      secrets:
        - name: dockerhub-credentials
  - name: Generate SBOM
    task:
      jobs:
        - name: 'Job #1'
          commands:
            - checkout
            - sem-version python 3.11
            - cache restore "pip-cache-$(checksum requirements.txt)"
            - pip install -r requirements.txt
            - pip install cyclonedx-bom
            - cyclonedx-py environment -o sbom.xml
            - artifact push workflow sbom.xml
            - cache store "pip-cache-$(checksum requirements.txt)" ~/.cache/pip
      secrets:
        - name: dockerhub-credentials
  - name: Build Docker Image
    task:
      jobs:
        - name: 'Job #1'
          commands:
            - checkout
            - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
            - 'docker build -t tijanao/projecttijana:${SEMAPHORE_GIT_SHA} .'
      secrets:
        - name: dockerhub-credentials
  - name: Push Docker image
    task:
      jobs:
        - name: 'Job #1'
          commands:
            - checkout
            - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
            - 'docker build -t tijanao/projecttijana:${SEMAPHORE_GIT_SHA} .'
            - 'docker push tijanao/projecttijana:${SEMAPHORE_GIT_SHA}'
            - 'docker tag tijanao/projecttijana:${SEMAPHORE_GIT_SHA} tijanao/projecttijana:latest'
            - 'docker push tijanao/projecttijana:latest'
      secrets:
        - name: dockerhub-credentials
  - name: Create namespace
    task:
      jobs:
        - name: 'Job #1'
          commands:
            - checkout
            - kubectl create namespace tijanaopacic || true
      secrets:
        - name: kubeconfig
  - name: Deploy  Image to Kubernetes
    task:
      jobs:
        - name: 'Job #1'
          commands:
            - checkout
            - kubectl apply -f deployment.yml -n tijanaopacic
            - kubectl rollout status deployment/tijana-app -n tijanaopacic
      secrets:
        - name: kubeconfig
  - name: Deploy Service to Kubernetes
    task:
      jobs:
        - name: 'Job #1'
          commands:
            - checkout
            - kubectl apply -f service.yml -n tijanaopacic
      secrets:
        - name: kubeconfig
